"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = InnerText;

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function SubText(str, size, className) {
  var words = str.split(" ");
  var style = {
    fontSize: "50%"
  };
  var dy = "15%";
  var cmp = words.map(function (w) {
    var c = [];
    c.push(_react2.default.createElement(
      "tspan",
      {
        className: className + "-subtext",
        key: w,
        style: style,
        x: size / 2,
        dy: dy
      },
      w
    ));
    dy = "10%";
    return c;
  });
  return cmp;
}
function InnerText(props) {
  var title = props.title,
      className = props.className,
      size = props.size,
      data = props.data,
      active = props.active;
  var length = data.length;

  var total = data.reduce(function (sum, currItem) {
    return sum + currItem.value;
  }, 0);
  var newData = data.map(function (d) {
    var percent = d.value * 100 / total;
    percent = Math.round(percent) + "%";
    return { name: d.name, value: percent };
  });
  newData[-1] = {
    name: title,
    value: length
  };

  var style = {
    fontSize: size / 5 + "px"
  };
  var style1 = {
    fontSize: "90%"
  };
  var subText = SubText(newData[active % length].name, size, className);
  return _react2.default.createElement(
    "text",
    {
      className: className,
      style: style,
      x: size / 2,
      y: size / 2,
      textAnchor: "middle",
      dominantBaseline: "ideographic"
    },
    _react2.default.createElement(
      "tspan",
      { className: className + "-value", style: style1, x: size / 2 },
      newData[active % length].value
    ),
    subText
  );
}

InnerText.propTypes = {
  title: _propTypes2.default.string.isRequired,
  className: _propTypes2.default.string.isRequired,
  size: _propTypes2.default.number.isRequired,
  data: _propTypes2.default.arrayOf(_propTypes2.default.shape({
    name: _propTypes2.default.string,
    value: _propTypes2.default.number.isRequired
  })).isRequired,
  active: _propTypes2.default.number.isRequired
};