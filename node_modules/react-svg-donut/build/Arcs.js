"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = Arcs;

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _ArcPath = require("./ArcPath");

var _ArcPath2 = _interopRequireDefault(_ArcPath);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function calculateTotal(items) {
  return items.reduce(function (sum, currItem) {
    return sum + currItem.value;
  }, 0);
}

function Arcs(props) {
  var size = props.size,
      data = props.data,
      active = props.active,
      onHover = props.onHover,
      className = props.className,
      colors = props.colors,
      innerRadius = props.innerRadius,
      outerRadius = props.outerRadius,
      activeOffset = props.activeOffset;

  var angle = 270;
  var total = calculateTotal(data);
  return _react2.default.createElement(
    "g",
    { className: className },
    data.map(function (item, index) {
      var value = item.value;

      var fill = colors[index % colors.length];
      var arcPath = _react2.default.createElement(_ArcPath2.default, {
        className: className + "-arcpath-" + index,
        size: size,
        item: item,
        index: index,
        key: item.name,
        innerRadius: innerRadius,
        outerRadius: index === active ? outerRadius + activeOffset : outerRadius,
        fill: fill,
        angle: angle,
        total: total,
        onMouseEnter: onHover
      });
      angle += value / total * 360;
      return arcPath;
    })
  );
}

Arcs.propTypes = {
  size: _propTypes2.default.number,
  className: _propTypes2.default.string,
  data: _propTypes2.default.arrayOf(_propTypes2.default.shape({
    name: _propTypes2.default.string,
    value: _propTypes2.default.number.isRequired
  })).isRequired,
  active: _propTypes2.default.number,
  onHover: _propTypes2.default.func,
  colors: _propTypes2.default.arrayOf(_propTypes2.default.string),
  innerRadius: _propTypes2.default.number,
  outerRadius: _propTypes2.default.number,
  activeOffset: _propTypes2.default.number
};

Arcs.defaultProps = {
  size: 500,
  className: "donut-chart",
  colors: ["rgb(51, 102, 204)", "rgb(220, 57, 18)", "rgb(255, 153, 0)", "rgb(16, 150, 24)", "rgb(153, 0, 153)"],
  active: -1,
  // eslint-disable-next-line
  onHover: function onHover(item) {
    return console.log("Hover", item);
  },
  innerRadius: 0.65,
  outerRadius: 0.95,
  activeOffset: 0.05
};